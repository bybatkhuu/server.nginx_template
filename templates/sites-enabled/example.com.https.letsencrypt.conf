upstream api-server {
	server http://127.0.0.1:8000;
}


# Main domain as static files (HTTPS):
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name example.com;

	## Logging:
	access_log /dev/stdout combined;
	access_log /var/log/nginx/example.com.access.$map_date_now.log combined;
	access_log /var/log/nginx/example.com.access.json.$map_date_now.log json_combined;

	## Restrict methods:
	if ($request_method !~ ^(GET|POST|PUT|PATCH|DELETE|HEAD|CONNECT|OPTIONS)$) {
		return '405';
	}

	## SSL:
	ssl_stapling on;
	ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

	## Security headers:
	add_header Expect-CT "max-age=604800, report-uri='https://example.com/report'" always;
	add_header Access-Control-Allow-Origin "https://example.com" always;
	include /etc/nginx/mod/security-headers.conf;

	## Additional configs:
	include /etc/nginx/mod/general.conf;
	include /etc/nginx/mod/well-known.conf;

	## Static files:
	root /var/www/example.com/public;

	location / {
		try_files $uri $uri/ =404;
	}
}

## Subdomain as reverse proxy (HTTPS):
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;
	server_name api.example.com;

	## Logging:
	access_log /dev/stdout combined;
	access_log /var/log/nginx/api.example.com.access.$map_date_now.log combined;
	access_log /var/log/nginx/api.example.com.access.json.$map_date_now.log json_combined;

	## Restrict methods:
	if ($request_method !~ ^(GET|POST|PUT|PATCH|DELETE|HEAD|CONNECT|OPTIONS)$) {
		return '405';
	}

	## SSL:
	ssl_stapling on;
	ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
	ssl_trusted_certificate /etc/letsencrypt/live/example.com/chain.pem;

	## Security headers:
	add_header Expect-CT "max-age=604800, report-uri='https://example.com/report'" always;
	add_header Access-Control-Allow-Origin "https://example.com" always;
	include /etc/nginx/mod/security-headers.conf;

	## Additional configs:
	include /etc/nginx/mod/general.conf;
	include /etc/nginx/mod/well-known.conf;

	## Reverse proxy:
	location / {
		rewrite ^/api/(.*)$ /$1?$args break;
		proxy_set_header Host $host;
		include /etc/nginx/mod/proxy.conf;
		proxy_pass http://api-server;
	}
}

## HTTP redirect:
server {
	listen 80;
	listen [::]:80;
	server_name .example.com;

	include /etc/nginx/mod/letsencrypt.conf;

	location / {
		return 301 https://$host$request_uri;
	}
}
