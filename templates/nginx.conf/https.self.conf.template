upstream api-server {
	server 127.0.0.1:8000;

	## Or Load Balancing:
	# least_conn;
	# hash ${_DOLLAR}binary_remote_addr consistent;
	# server 127.0.0.1:8000;
	# server 127.0.0.1:8001;
	# server 127.0.0.1:8002;
}


## HTTPS:
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	## Logging:
	access_log /dev/stdout combined;
	access_log /var/log/nginx/access.${_DOLLAR}map_date_now.log combined;
	access_log /var/log/nginx/access.json.${_DOLLAR}map_date_now.log json_combined;

	## Restrict methods:
	if (${_DOLLAR}request_method !~ ^(GET|POST|PUT|PATCH|DELETE|HEAD|CONNECT|OPTIONS)${_DOLLAR}) {
		return '405';
	}

	## SSL:
	ssl_certificate /etc/nginx/ssl/self.crt;
	ssl_certificate_key /etc/nginx/ssl/self.key;

	## Security headers:
	include /etc/nginx/conf.d/custom-mods/security-headers.conf;

	## Additional configs:
	include /etc/nginx/conf.d/custom-mods/general.conf;
	include /etc/nginx/conf.d/custom-mods/well-known.conf;

	## Static files:
	root /var/www/web/public;

	location / {
		try_files ${_DOLLAR}uri ${_DOLLAR}uri/ =404;
	}

	location ^~ /api {
		proxy_set_header Host ${_DOLLAR}host;
		include /etc/nginx/conf.d/custom-mods/proxy.conf;
		proxy_pass http://api-server;
	}

	# include /etc/nginx/conf.d/custom-mods/status.conf;
}

## HTTP redirect:
server {
	listen 80;
	listen [::]:80;

	location / {
		return 301 https://${_DOLLAR}host${_DOLLAR}request_uri;
	}
}
