daemon off;
user www-data www-group;
worker_processes auto;

## Load dynamic modules:
include /etc/nginx/modules-enabled/*.conf;


events {
	multi_accept on;
	# worker_connections 1024;	# Default: 512
}


http {

	## Basic:
	charset utf-8;
	sendfile on;
	tcp_nopush on;
	server_tokens off;
	log_not_found off;
	types_hash_max_size 2048;	# Default: 1024
	client_max_body_size 16m;	# Default: 1m


	## MIME types:
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Default index files:
	index index.html index.htm index.shtml;


	## Logging:
	log_format json_combined escape=json
		'{'
			'"datetime":"$time_iso8601",'
			'"request_id":"$request_id",'
			'"client_address":"$remote_addr",'
			'"user":"$remote_user",'
			'"method":"$request_method",'
			'"uri":"$request_uri",'
			'"http_version":"$server_protocol",'
			'"status_code":"$status",'
			'"response_body_size":"$body_bytes_sent",'
			'"response_time":"$request_time",'
			'"http_referrer":"$http_referer",'
			'"http_user_agent":"$http_user_agent",'
			'"scheme":"$scheme",'
			'"host":"$http_host",'
			'"request":"$request",'
			'"request_length":"$request_length"'
		'}';

	error_log /dev/stderr warn;


	## Rate limiting:
	limit_req_log_level warn;
	limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
	limit_req_zone $binary_remote_addr zone=perip:10m rate=100r/s;
	limit_req_zone $server_name zone=perserver:10m rate=100r/s;
	limit_req zone=perip burst=20;
	limit_req_status 429;


	## Timeout:
	client_header_timeout 5s;	# Default: 60s
	client_body_timeout 5s;		# Default: 60s
	send_timeout 5s;			# Default: 60s
	keepalive_timeout 10s;		# Default: 75s


	## Gzip:
	gzip on;
	gzip_vary on;
	gzip_disable "msie6";
	gzip_proxied any;
	gzip_comp_level 4;			# Default: 1
	gzip_types text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
	# gzip_types *;


	## Connection header for WebSocket reverse proxy
	map $http_upgrade $connection_upgrade {
		default upgrade;
		"" close;
	}

	map $remote_addr $proxy_forwarded_elem {

		## IPv4 addresses can be sent as-is
		~^[0-9.]+$ "for=$remote_addr";

		## IPv6 addresses need to be bracketed and quoted
		~^[0-9A-Fa-f:.]+$ "for=\"[$remote_addr]\"";

		## Unix domain socket names cannot be represented in RFC 7239 syntax
		default "for=unknown";
	}

	map $http_forwarded $proxy_add_forwarded {

		## If the incoming Forwarded header is syntactically valid, append to it
		"~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

		## Otherwise, replace it
		default "$proxy_forwarded_elem";
	}

	map $time_iso8601 $map_date_now {
		default '0000-00-00';
		'~^(?<ymd>\d{4}-\d{2}-\d{2})' $ymd;
	}


	## Load configs:
	include /etc/nginx/sites-enabled/*.conf;
}
